Tests done by Ching-ling Huang with loop_test.c

Another loop test of "update" operation: in each loop, two update operations
to sqlite db are performed. It took 52 seconds to finish 10,000 loops. This
seems to be fast enough. But I am only testing with a small table (two
columns) and small number of entries (two rows). If the table is large, it
might take longer.

Ching-Ling

On Mon, May 19, 2008 at 8:17 PM, Ching-Ling Huang <chingling@berkeley.edu>
wrote:

> Hi Sue,
>   I have tested 10,000 insert operations. Each insert contains two integers
> for two fields in the same table. The loop runs 43 seconds. (too slow or too
> fast?) Attached is the code. I will try other sql operations and time them
> as this one. Thanks.
>
> Ching-Ling
>

Hi Sue, See below. Thanks.
-CL

On Wed, May 28, 2008 at 4:33 PM, Susan Dickey <dickey@path.berkeley.edu>
wrote:

> Please tell me:
>
>
> How did you compile your program?
>

1-1) Edit: I put the attached directory (zipped) in SOBU's SDK directory:
/SOBOS-SDK-x86-for-Linux-i686/package/

1-2) "Make" at the top directory of SDK: /SOBOS-SDK-x86-for-Linux-i686/

1-2) after compile: find complied results in
/SOBOS-SDK-x86-for-Linux-i686/build_dir/, called "sqlite_loop-1.0"

1-3) I simply zip that directory "sqlite_loop-1.0" and copy it to SOBU and
extract that under any directory.  (I know there is "ipkg" option, but I
didnt use it.)


> How did you run your program?
>

2-1) on SOBU, I use the sqlite3 shell interface to create a database, say
"test.db", in that directory.
>> sqlite3 test.db
>> create table tbl1 (one varchar(10), two smallinit)*;
*
More instructions can be found on http://www.sqlite.org/sqlite.html. You can
use "select * from tbl1" to see if data are successfully inserted into this
table.

2-2) run the compiled binary where test.db is located.
>>sqlite_loop test.db

In the code, I basically use difftime() to measure the time before and after
loops.

>
> How did you know the inserts were working correctly?
>

3-1) I start with simple insert and delete operations. I use code to do
those operations, and use sqlite3 shell interface to check if operations are
performed successfully. (I used "select * from tbl1" a lot....)
